buildscript {
    dependencies {
        // Can't use the newer 'plugins' block for Mixin, need to use the old 'apply plugin' method
        //classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '1.2-SNAPSHOT'
}


version = '1.19.2 v1.3'
group = 'net.mazee.cozyfoods'

base {
    archivesName = project.archives_base_name
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven { // JEI
        name = "Progwml6 maven"
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven { // TOP
        url "https://modmaven.dev"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
    maven { //Pehkui
        url = "https://jitpack.io"
    }

    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {

    //minecraft 'net.minecraftforge:forge:1.19.2-43.1.10'
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

        // compile against the JEI API but do not include it at runtime
    modCompileOnlyApi("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${mc_version}-fabric-api:${jei_version}")
        // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-${mc_version}-fabric:${jei_version}")

    modImplementation "curse.maven:farmers-delight-fabric-482834:4712795"

    modImplementation "curse.maven:farmers-respite-fabric-811003:4713398"

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    modImplementation "curse.maven:pehkui-319596:4684391"

    modImplementation "curse.maven:geckolib-388172:4711654"

    //implementation fg.deobf("curse.maven:xaeros-world-map-317780:4685552")
    //implementation fg.deobf("curse.maven:xaeros-minimap-263420:4685459")

    //implementation fg.deobf("curse.maven:pams-harvestcraft-2-trees-365460:4480280")

    //implementation fg.deobf("curse.maven:the-one-probe-245211:3965693")

    //implementation fg.deobf("curse.maven:better-third-person-435044:4177088")

    //implementation fg.deobf("curse.maven:rubidium-574856:4568727")
    //implementation fg.deobf("curse.maven:oculus-581495:4299147")


    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}


// Add the generated resources to the main source set
sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}
dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}